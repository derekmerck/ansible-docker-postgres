---

#############################
# Create required data container and directories
#############################

- name: Create data container
  docker_container:
    name: '{{ postgres_container_name + "-data" }}'
    image: busybox
    state: present
    volumes:
      - '/var/lib/postgresql/data'
  when: postgres_use_data_container

- name:    "Setup postgres data folder"
  file:
    path:  "{{ postgres_data_dir }}"
    state: directory
  when: not postgres_use_data_container


#############################
# Create required data container and directories
#############################

- name: Pull PostgreSQL image
  docker_image:
    name: '{{ postgres_docker_image }}'
    tag: '{{ postgres_docker_image_tag }}'

- name: Run PostgreSQL container
  docker_container:
    name: '{{ postgres_container_name }}'
    image: '{{ postgres_docker_image }}:{{ postgres_docker_image_tag }}'
    restart_policy: always
    state: started
    memory: '{{ container_memory_limit | default(omit) }}'

    volumes_from: '{{ [postgres_container_name + "-data"] if postgres_use_data_container else [] }}'
    volumes:      '{{ [postgres_data_dir + ":/var/lib/postgresql/data"]
                      if not postgres_use_data_container
                      else [] }}'

    ports:
      - '{{ postgres_port }}:5432'
    networks: '{{ postgres_networks }}'

    log_driver:   "{{ postgres_logger }}"
    log_options:  "{{ postgres_log_opts }}"

  register: postgres_container

- name: Wait until PostgreSQL starts up
  wait_for: port={{ postgres_port }} delay=5
  when: postgres_container.changed

- name: Ensure db client packages are available
  package:
    name: "{{item}}"
    state: present
  with_items:
    - postgresql
    - libpq-dev
    - python-psycopg2

- name: Create user
  include: add_user_play.yml
  when: postgres_user is defined and postgres_password is defined

- name: Create database
  include: add_database_play.yml
  when: postgres_database is defined and postgres_user is defined


